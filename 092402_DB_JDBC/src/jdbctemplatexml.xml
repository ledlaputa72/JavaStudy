<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

<!-- jdbctemplatexml.xml 
	연결설정.. 기존의 connection과는 다르다. 
	xml 에 기록한다 (반복설정을 피할수 있다)  -->
	
<!-- datasource -->
<!-- cf.connectino pool -->
<bean id="dataSourceBean" class = "org.springframework.jdbc.datasource.DriverManagerDataSource">

	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
	<property name="username" value="hr"/>
	<property name="password" value="hr"/>
	
</bean>	
<bean id="jdbcTemplateBean" class="org.springframework.jdbc.core.JdbcTemplate">
	<property name="dataSource" ref="dataSourceBean"/>
</bean>

<!-- 커넥션풀 datasource ==> JdbcTemplate ==> SawonDAO에 적용 
 결국 SawonDAT에는 스프링 DB인 JdbcTemplate를 사용 
 -->
<bean id="sawonDAOBean" class="helloProcess.SawonDAO">
	<property name="jdbcTemplate" ref="jdbcTemplateBean"/>
</bean>
</beans>
<!-- SawonDAO에 jdbcTemplate 적용  
	SawonDAO sawonDAOBean = new SawonDAO() 
	여기의미가 setJdbcTemplate()이므로 
	SawonDAO에서 만들때 getter.setter자동만들기하면 
	setJtl1()이 되므로 직접 입력한다. 
-->

