<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- namespace는 이름공간, 자바에서는 package, C#에서는 using , xmlns , package가 다르면 class의 이름이 중복되도 무관  -->
<!-- 여기서는 bean 객체의 class=패키지명.클래스명 처럼, namespace=패키지명.xml이름  -->
<!-- mapper 아래 cache-ref...라는 문장은 삭제하고 -->

<mapper namespace="com.Employee.DAOVO.employees-mapper">
	<!-- 자바와SQL을 맵핑하는데 다음처럼 한다. 
	원래 resultType에는 매핑하기 위한 자바전체 경로 사용  
	예) resultType ="com.mycompany.SawonClass" //실행결과가 클래스로 넘어온다.
	여기서 sawon은 긴 경로명 대신 사용하는 별명(alias)이다. 
	예) 정수형인 경우는 resultType ="int"  //실행결과가 int로 넘어온다. 
	-->
	
	<select id="employeeAllData" resultType="sawon">
		SELECT employee_id, first_name, last_name, email, phone_number,hire_date,salary FROM employees
	</select>
	
	<!--  parameterType="int"는 #{employee_id}가 정수  -->
	<select id="employeeSearchData" resultType="sawon" parameterType="int">
		SELECT employee_id, first_name, last_name, email, phone_number,hire_date,salary FROM employees WHERE employee_id=#{employee_id}
	</select>
	
	<!-- Hashmap이용   -->
	<select id="employeeSearchData2" resultType="sawon" parameterType="hashmap">
		SELECT employee_id, first_name, last_name, email, phone_number,hire_date,salary FROM employees WHERE employee_id=#{employee_id} and last_name=#{last_name}
	</select>
	
	<!-- insert  -->
	<insert id="employeeInsertData" parameterType="sawon">
		INSERT INTO EMPLOYEES (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, SALARY, JOB_ID ) VALUES (#{employee_id},#{first_name}, #{last_name}, #{email}, #{phone_number}, #{hire_date}, #{salary}, #{job_id});
	</insert>
	<!-- #{}쓸때 employeeVO와 대소문자 및 글자 전체 그대로 맞추럭 -->
	<!-- EMPPOYEES 제약조건 알아보기 (이떄 EMPLOYEES 는 대문자)
	 	select * from user_constraints
		where table_name = 'EMPLOYEES'; -->
	
	<!-- update -->
	<update id="employeeUpdateData" parameterType="sawon" >
		UPDATE EMPLOYEES SET FIRST_NAME = #{first_name), LAST_NAME = #{last_name}, SALARY = #{salary} WHERE EMPLOYEE_ID = #{employee_id}
	</update>
	
	<!-- Delete -->
	<delete id="employeeDeleteData" parameterType="int">
		DELETE EMPLOYEES WHERE EMPLOYEE_ID = #{employee_id}		
	</delete>
	<!-- #{employee_id}는 VO안에 있는 필드명과 대소문자까지 같아야 함  -->
	
</mapper>
